<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC
        "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.imusicweb.dao.SongMapper">
    <resultMap id="BaseResultMap" type="com.example.imusicweb.database.Song" >
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="singer_id" jdbcType="INTEGER" property="singer_id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="introduction" jdbcType="VARCHAR" property="introduction"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="create_time"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="update_time"/>
        <result column="pic" jdbcType="VARCHAR" property="pic"/>
        <result column="url" jdbcType="VARCHAR" property="url"/>
        <result column="click_times" jdbcType="INTEGER" property="clickTimes"/>
    </resultMap>
    <resultMap id="ResultMapWithBLOBS" type="com.example.imusicweb.database.Song" extends="BaseResultMap">
        <result column="lyric" jdbcType="LONGVARCHAR" property="lyric"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,singer_id,name,introduction,create_time,update_time,pic,url,click_times
    </sql>

    <sql id="Blob_Column_List">
        id,singer_id,name,introduction,create_time,update_time,pic,lyric,url,click_times
    </sql>

    <insert id="insert" parameterType="com.example.imusicweb.database.Song">
        insert into musiclist
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="singer_id != null">
                singer_id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="introduction != null">
                introduction,
            </if>
            create_time,update_time,
            <if test="pic != null">
                pic,
            </if>
            <if test="lyric != null">
                lyric,
            </if>
            <if test="url != null">
                url,
            </if>
            <if test="clickTimes != null">
                click_times,
            </if>
        </trim>
        <trim prefix=" values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id},
            </if>
            <if test="singer_id != null">
                #{singer_id},
            </if>
            <if test="name != null">
                #{name},
            </if>
            <if test="introduction != null">
                #{introduction},
            </if>
            now(),now(),
            <if test="pic != null">
                #{pic},
            </if>
            <if test="lyric != null">
                #{lyric},
            </if>
            <if test="url != null">
                #{url},
            </if>
            <if test="clickTimes != null">
                #{clickTimes},
            </if>
        </trim>
    </insert>

    <update id="update" parameterType="com.example.imusicweb.database.Song">
        update musiclist
        <set>
            <if test="singer_id != null">
               singer_id = #{singer_id},
            </if>
            <if test="name != null">
                name = #{name},
            </if>
            <if test="introduction != null">
                introduction = #{introduction},
            </if>
            update_time = now(),
            <if test="pic != null">
               pic = #{pic},
            </if>
            <if test="lyric != null">
                lyric = #{lyric},
            </if>
            <if test="url != null">
                url = #{url},
            </if>
        </set>
            where id = #{id}
    </update>

    <delete id="delete" parameterType="java.lang.Integer">
        delete from musiclist
        where id = #{id}
    </delete>

    <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBS" parameterType="java.lang.Integer">
        select
        <include refid="Blob_Column_List"></include>
        from musiclist where id = #{id}
    </select>

    <select id="allSong" resultMap="ResultMapWithBLOBS">
        select
        <include refid="Blob_Column_List"></include>
        from musiclist order by click_times desc limit 10
    </select>

    <select id="SongOfName" resultMap="ResultMapWithBLOBS" parameterType="java.lang.String" >
         select
         <include refid="Blob_Column_List"></include>
         from musiclist where name like #{name}
    </select>

    <select id="SongName" resultMap="ResultMapWithBLOBS" parameterType="java.lang.String" >
        select
        <include refid="Blob_Column_List"></include>
        from musiclist where name = #{name}
    </select>

    <select id="SongOfSinger" resultMap="ResultMapWithBLOBS" parameterType="java.lang.Integer" >
        select
        <include refid="Blob_Column_List"></include>
        from musiclist where singer_id = #{singer_id}
    </select>

    <update id="countTimes">
        update musiclist set click_times = click_times + 1
        where id = #{id}
    </update>

</mapper>